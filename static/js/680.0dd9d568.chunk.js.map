{"version":3,"file":"static/js/680.0dd9d568.chunk.js","mappings":"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","sources":["components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","redux/selectors.js","components/ContactList/ContactList.jsx","components/ConactForm/ContactForm.jsx","pages/Contacts.js"],"sourcesContent":["import { Box, TextField, Typography } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { filterReduser } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e => {\n    dispatch(filterReduser(e.currentTarget.value));\n  };\n\n  return (\n    <Box maxWidth=\"sm\" sx={{ ml: 3, mt: 3 }}>\n      <Typography variant=\"h5\" component=\"p\">\n        Find contacts by name\n      </Typography>\n      <TextField\n        fullWidth\n        id=\"filter\"\n        variant=\"outlined\"\n        type=\"text\"\n        onChange={onChangeFilter}\n        sx={{ mt: 2 }}\n      />\n    </Box>\n  );\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useDeleteContactMutation } from 'redux/contactsApi';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport Avatar from 'react-avatar';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport {\n  IconButton,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n} from '@mui/material';\n\nexport const ContactItem = ({ contact: { name, number, id } }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <>\n      <ListItemAvatar>\n        <Avatar round={true} size={40} name={name} />\n      </ListItemAvatar>\n      <ListItemText\n        primary={\n          <React.Fragment>\n            <Typography\n              sx={{ display: 'inline' }}\n              component=\"span\"\n              variant=\"h4\"\n              color=\"text.primary\"\n            >\n              {name}\n            </Typography>\n          </React.Fragment>\n        }\n        secondary={\n          <React.Fragment>\n            <Typography\n              sx={{ display: 'inline', ml: 2 }}\n              component=\"span\"\n              variant=\"h6\"\n              color=\"text.primary\"\n            >\n              {number}\n            </Typography>\n          </React.Fragment>\n        }\n      />\n      <IconButton\n        variant=\"contained\"\n        aria-label=\"delete\"\n        size=\"large\"\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n        disabled={isDeleting}\n      >\n        <DeleteIcon fontSize=\"inherit\" />\n        {isDeleting && <Spinner />}\n      </IconButton>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","\nexport const selectFilter = state => state.filter;\n\n\n","// import { Box } from 'components/Box';\nimport { List, ListItem } from '@mui/material';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { useFetchContactsQuery } from 'redux/contactsApi';\nimport { selectFilter } from 'redux/selectors';\n\nconst getVizibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nexport const ContactList = () => {\n  const { data: contacts } = useFetchContactsQuery();\n  const filter = useSelector(selectFilter);\n  const vizibleContacts = getVizibleContacts(contacts, filter);\n\n  return (\n    <List sx={{ width: '100%', maxWidth: 500 }}>\n      {vizibleContacts.reverse().map(contact => (\n        <ListItem key={contact.id} alignItems=\"flex-start\">\n          <ContactItem contact={contact} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import { useState } from 'react';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport {\n  useFetchContactsQuery,\n  useCreateContactMutation,\n} from 'redux/contactsApi';\nimport { Box, Button, Grid, TextField } from '@mui/material';\n\nexport const ContactForm = () => {\n  const [formInput, setFormInput] = useState({\n    name: '',\n    number: '',\n  });\n  const { data: contacts } = useFetchContactsQuery();\n  const [createContact, { isLoading }] = useCreateContactMutation();\n  const { name, number } = formInput;\n\n  const onFormChange = e => {\n    const { name, value } = e.currentTarget;\n    setFormInput(state => ({ ...state, [name]: value }));\n  };\n\n  const handleAddContact = async e => {\n    e.preventDefault();\n    setFormInput({ name: '', number: '' });\n    const newContact = {\n      name,\n      number,\n    };\n\n    contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    )\n      ? alert(`${newContact.name} is already exist in your contacts!`)\n      : await createContact(newContact);\n  };\n\n  return (\n    <Box maxWidth=\"sm\" sx={{ ml: 3, mt: 3 }}>\n      <Box component=\"form\" onSubmit={handleAddContact}>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <p> Name</p>\n            <TextField\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={onFormChange}\n              fullWidth\n              id=\"name\"\n              label=\"name\"\n              variant=\"outlined\"\n              sx={{ mt: 2 }}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <p>Number</p>\n            <TextField\n              fullWidth\n              id=\"number\"\n              label=\"number\"\n              variant=\"outlined\"\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={onFormChange}\n              sx={{ mt: 2 }}\n            />\n          </Grid>\n        </Grid>\n\n        <Button\n          type=\"submit\"\n          disabled={isLoading}\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          {isLoading && <Spinner />}\n          Add contact\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n","// import { Box } from '../components/Box';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { ContactForm } from '../components/ConactForm/ContactForm';\n// import { Phonebook } from '../components/App.styled';\nimport { useFetchContactsQuery } from 'redux/contactsApi';\nimport { Spinner } from '../components/Spinner/Spinner';\nimport { Typography } from '@mui/material';\n\nexport default function Contacts() {\n    const { data: contacts, isFetching } = useFetchContactsQuery();\n\n    return (        \n    \n    <div>\n      <Typography variant='h3' sx={{m: 3}}>Phonebook</Typography>\n      <ContactForm />\n      <Typography variant='h3' sx={{m: 3}}>Contacts</Typography>\n      {isFetching && <Spinner />}\n      {contacts?.length > 0 ? (\n        <Filter />\n      ) : (\n                    <Typography variant='h3' sx={{ m: 3 }}>\n          There are no contacts in your phonebook!\n        </Typography>\n      )}\n      {contacts?.length > 0 && <ContactList />}\n\n    </div>\n  );\n\n}"],"names":["Filter","dispatch","useDispatch","Box","maxWidth","sx","ml","mt","Typography","variant","component","TextField","fullWidth","id","type","onChange","e","filterReduser","currentTarget","value","ContactItem","contact","name","number","useDeleteContactMutation","deleteContact","isDeleting","isLoading","ListItemAvatar","round","size","ListItemText","primary","display","color","secondary","IconButton","onClick","disabled","Delete","fontSize","Spinner","selectFilter","state","filter","ContactList","vizibleContacts","contacts","normalizedFilter","toLowerCase","includes","getVizibleContacts","useFetchContactsQuery","data","useSelector","List","width","reverse","map","ListItem","alignItems","ContactForm","useState","formInput","setFormInput","useCreateContactMutation","createContact","onFormChange","handleAddContact","preventDefault","newContact","find","alert","onSubmit","Grid","container","spacing","item","xs","pattern","title","required","label","Button","mb","Contacts","isFetching","m","length"],"sourceRoot":""}